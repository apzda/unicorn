apzda.cloud.config.logout-path=/logout
apzda.cloud.config.real-ip-from=127.0.0.1,192.168.0.0/16,172.0.0.0/8,10.0.0.0/8
# === security ===
apzda.cloud.security.role-prefix=R_
apzda.cloud.security.meta-repo=redis
apzda.cloud.security.jwt-key='jwt.is-safe$'
apzda.cloud.security.jwt-leeway=0s
apzda.cloud.security.credentials-expired-enabled=true
apzda.cloud.security.reset-credentials-path=/account/updatePassword
apzda.cloud.security.mfa-enabled=true
apzda.cloud.security.mfa-exclude=/account/mfaConfig,/account/setupMfa,/account/verifyMfa
# cors
apzda.cloud.security.cors.[/**].origin-patterns=*
apzda.cloud.security.cors.[/**].headers=authorization,uuid,content-type,x-captcha-id,x-device
apzda.cloud.security.cors.[/**].credentials=true
# excludes - will not check authentication
apzda.cloud.security.exclude[0]=/ucenter/login
apzda.cloud.security.exclude[1]=/ucenter/refresh-token
apzda.cloud.security.exclude[2]=/ucenter/send-login-code
apzda.cloud.security.exclude[3]=/ucenter/sms-login
apzda.cloud.security.exclude[4]=/captcha/**
# === end security ===
# === gateway ===
apzda.cloud.gateway.default.enabled=true
# gateway - captcha
apzda.cloud.gateway.captcha-service.prefix=/captcha
apzda.cloud.gateway.captcha-service.routes[0].path=/create
apzda.cloud.gateway.captcha-service.routes[0].method=create
apzda.cloud.gateway.captcha-service.routes[0].actions=get,post
apzda.cloud.gateway.captcha-service.routes[1].path=/validate
apzda.cloud.gateway.captcha-service.routes[1].method=validate
# gateway - ucenter
apzda.cloud.gateway.ucenter-service.routes[0].path=/ucenter/**
apzda.cloud.gateway.ucenter-service.routes[0].method=/ucenter/{segment}
apzda.cloud.gateway.ucenter-service.routes[0].actions=*
apzda.cloud.gateway.ucenter-service.routes[0].login=true
# gateway - account
apzda.cloud.gateway.account-service.routes[0].path=/account/**
apzda.cloud.gateway.account-service.routes[0].method={segment}
apzda.cloud.gateway.account-service.routes[0].login=true
# gateway - role
apzda.cloud.gateway.role-service.routes[0].path=/role/**
apzda.cloud.gateway.role-service.routes[0].method={segment}
apzda.cloud.gateway.role-service.routes[0].login=true
# gateway - privilege
apzda.cloud.gateway.privilege-service.routes[0].path=/privilege/**
apzda.cloud.gateway.privilege-service.routes[0].method={segment}
apzda.cloud.gateway.privilege-service.routes[0].login=true
# gateway - audit
apzda.cloud.gateway.audit-service.routes[0].path=/audit-log/**
apzda.cloud.gateway.audit-service.routes[0].method=/audit-log/{segment}
# gateway - oss
apzda.cloud.gateway.oss-service.routes[0].path=/oss
apzda.cloud.gateway.oss-service.routes[0].routes[0].path=/upload
apzda.cloud.gateway.oss-service.routes[0].routes[0].actions=post
apzda.cloud.gateway.oss-service.routes[0].routes[0].method=upload
apzda.cloud.gateway.oss-service.routes[0].routes[1].path=/chunk-upload
apzda.cloud.gateway.oss-service.routes[0].routes[1].actions=post,get
apzda.cloud.gateway.oss-service.routes[0].routes[1].method=chunkUpload
apzda.cloud.gateway.oss-service.routes[0].routes[2].path=/query
apzda.cloud.gateway.oss-service.routes[0].routes[2].actions=get
apzda.cloud.gateway.oss-service.routes[0].routes[2].method=query
apzda.cloud.gateway.oss-service.routes[1].path=/oss/preview/**
apzda.cloud.gateway.oss-service.routes[1].method=/oss/preview/{segment}
apzda.cloud.gateway.oss-service.routes[1].actions=get
apzda.cloud.gateway.oss-service.routes[2].path=/oss/download/**
apzda.cloud.gateway.oss-service.routes[2].method=/oss/download/{segment}
apzda.cloud.gateway.oss-service.routes[2].actions=get
# === end gateway ===
